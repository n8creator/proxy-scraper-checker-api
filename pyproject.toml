[tool.poetry]
name = "proxy"
version = "0.0.0"
description = "Fork of monosans/proxy-scraper-checker with SQLite storage and API endpoint"
authors = [
    "monosans <hsyqixco@protonmail.com>",
    "n8creator <github@n8creator.com>"
]
maintainers = [
    "n8creator <https://github.com/n8creator>"
]
license = "MIT"
repository = "https://github.com/n8creator/proxy-scraper-checker-api"
classifiers = ["Private :: Do Not Upload"]
packages = [
    { include = "proxy_scraper_checker" },
]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
aiodns = ">=1.1,<4"
aiofiles = "*"
aiohttp = ">=3.8.6,<4"
aiohttp-socks = ">=0.7,<0.11"
attrs = ">=22.2"
brotli = ">=1,<2"
brotlicffi = "<2"
certifi = "*"
charset-normalizer = ">=2,<4"
maxminddb = ">=1.3,<3"
platformdirs = "<5"
rich = ">=12.3,<14"
uvloop = { version = ">=0.14,<0.22", markers = "implementation_name == 'cpython' and (sys_platform == 'darwin' or sys_platform == 'linux')" }
pydantic = "^2.10.4"
sqlalchemy = "^2.0.36"
fastapi = "^0.115.6"
uvicorn = "^0.34.0"
tomli = "^2.2.1"

[tool.poetry.group.dev.dependencies]
mypy = { version = "1.14", extras = ["faster-cache"] }
ruff = "0.8.4"
types-aiofiles = "24.1.0.20241221"
typing-extensions = "4.12.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Ruff tool
[tool.ruff]
line-length = 120
indent-width = 4
preview = true

exclude = [
  "migrations",
  "__pycache__",
  ".venv",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]

ignore = [
  "A005",
  "ANN401",
  "ASYNC109",
  "B008",
  "BLE001",
  "C901",
  "COM812",
  "CPY001",
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D403",
  "D415",
  "D417",
  "DJ008",
  "DOC201",
  "DOC402",
  "DOC501",
  "FURB180",
  "ISC001",
  "PLR0904",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0914",
  "PLR0915",
  "PLR0916",
  "PLR0917",
  "PLR1702",
  "RUF001",
  "RUF002",
  "RUF003",
  "S110",
  "S112",
  "S308",
  "S311",
  "S404",
  "SIM105",
  "TD002",
  "TD003",
  "TRY400",
]
unfixable = ["RUF027", "T"]

[tool.ruff.lint.per-file-ignores]
"*/migrations/*" = ["E501"]
"manage.py" = ["E501"]
"settings.py" = ["E501", "F403", "F405"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = true
docstring-code-format = true

[tool.ruff.lint.flake8-self]
ignore-names = ["_name_", "_value_"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
exempt-modules = []
strict = true

[tool.ruff.lint.isort]
combine-as-imports = true
required-imports = ["from __future__ import annotations"]
split-on-trailing-comma = false

[tool.ruff.lint.mccabe]
max-complexity = 10